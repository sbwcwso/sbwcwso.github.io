(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{932:function(t,a,v){"use strict";v.r(a);var l=v(12),_=Object(l.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"算法在计算中的作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法在计算中的作用"}},[t._v("#")]),t._v(" 算法在计算中的作用")]),t._v(" "),v("h2",{attrs:{id:"算法的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法的定义"}},[t._v("#")]),t._v(" 算法的定义")]),t._v(" "),v("ul",[v("li",[t._v("算法是任何良定义的计算过程，该过程取某个值或集的集合作为"),v("strong",[t._v("输入")]),t._v("并产生某个值或集合作为"),v("strong",[t._v("输出")]),t._v(" "),v("ul",[v("li",[t._v("问题实例由计算该问题解所必需的（满足问题陈述中强加的各种约束）输入组成")]),t._v(" "),v("li",[t._v("若对于每个输入实例，算法都能以正确的输出停机，则称该算法是正确的，并称正确的算法解决了给定的问题\n"),v("ul",[v("li",[t._v("不正解的算法只要错误率可控，有时候可能也是有用的")])])])])]),t._v(" "),v("li",[t._v("算法研究的是程序性能和资源利用")])]),t._v(" "),v("h3",{attrs:{id:"性能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[t._v("#")]),t._v(" 性能")]),t._v(" "),v("ul",[v("li",[t._v("程序设计中，比性能更重要的东西\n"),v("ul",[v("li",[t._v("特性，设计方法，安全，用户友好性 ...")])])])]),t._v(" "),v("h4",{attrs:{id:"为什么研究性能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么研究性能"}},[t._v("#")]),t._v(" 为什么研究性能")]),t._v(" "),v("ul",[v("li",[t._v("性能处于最低层，相当于经济中的货币，为其它功能进行支付\n"),v("ul",[v("li",[t._v("性能能提供更好的用户友好性")]),t._v(" "),v("li",[t._v("能决定可行与不可行，并可将不可行变为可行\n"),v("ul",[v("li",[t._v("如实时性，内存占用等")])])]),t._v(" "),v("li",[t._v("Java 提供面向对象的功能，这样在异常处理方面比较方便，但是是以消耗性能为代价的。程序整体的性能需要能为其进行支付")])])])])])}),[],!1,null,null,null);a.default=_.exports}}]);