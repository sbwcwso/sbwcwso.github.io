(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{910:function(e,s,a){"use strict";a.r(s);var t=a(12),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"traces"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#traces"}},[e._v("#")]),e._v(" Traces")]),e._v(" "),a("p",[e._v("This directory contains traces of allocate and free requests that are\nused by the test harness to evaluate the student malloc packages.")]),e._v(" "),a("h2",{attrs:{id:"1-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1-files"}},[e._v("#")]),e._v(" 1. Files")]),e._v(" "),a("ul",[a("li",[a("code",[e._v(".rep")]),e._v(" Original traces")]),e._v(" "),a("li",[a("code",[e._v("-bal.rep")]),e._v(" Balanced versions of the original traces")])]),e._v(" "),a("p",[e._v('Note: A "balanced" trace has a matching free request for each allocate\nrequest.')]),e._v(" "),a("h2",{attrs:{id:"2-trace-file-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2-trace-file-format"}},[e._v("#")]),e._v(" 2. Trace file format")]),e._v(" "),a("p",[e._v("A trace file is an ASCII file. It begins with a 4-line header:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<sugg_heapsize>   /* suggested heap size (unused) */\n<num_ids>         /* number of request id's */\n<num_ops>         /* number of requests (operations) */\n<weight>          /* weight for this trace (unused) */\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("The header is followed by "),a("code",[e._v("num_ops")]),e._v(" text lines. Each line denotes either\nan allocate [a], reallocate [r], or free [f] request. The "),a("code",[e._v("<alloc_id>")]),e._v("\nis an integer that uniquely identifies an allocate or reallocate\nrequest.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("a <id> <bytes>  /* ptr_<id> = malloc(<bytes>) */\nr <id> <bytes>  /* realloc(ptr_<id>, <bytes>) */\nf <id>          /* free(ptr_<id>) */\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("For example, the following trace file:")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<beginning of file>\n20000\n3\n8\n1\na 0 512\na 1 128\nr 0 640\na 2 128\nf 1\nr 0 768\nf 0\nf 2\n<end of file>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("p",[e._v("is balanced. It has a recommended heap size of 20000 bytes (ignored),\nthree distinct request ids (0, 1, and 2), eight different requests\n(one per line), and a weight of 1 (ignored).")])])}),[],!1,null,null,null);s.default=n.exports}}]);