(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{724:function(a,t,r){"use strict";r.r(t);var s=r(12),_=function(a){a.options.__data__block__={markmap_1a96284d:"- [堆栈](#堆栈)\n  - [示例: 表达式求值](#示例-表达式求值)\n  - [后缀表达式](#后缀表达式)\n  - [堆栈的抽象数据类型描述](#堆栈的抽象数据类型描述)\n  - [堆栈的实现](#堆栈的实现)\n    - [堆栈的顺序存储实现](#堆栈的顺序存储实现)\n      - [示例: 用一个数组实现两个堆栈](#示例-用一个数组实现两个堆栈)\n    - [堆栈的链式存储实现](#堆栈的链式存储实现)"}},e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"堆栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆栈"}},[a._v("#")]),a._v(" 堆栈")]),a._v(" "),r("Markmap",{attrs:{id:"markmap_1a96284d",code:a.$dataBlock.markmap_1a96284d}}),r("h2",{attrs:{id:"示例-表达式求值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例-表达式求值"}},[a._v("#")]),a._v(" 示例: 表达式求值")]),a._v(" "),r("h2",{attrs:{id:"后缀表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#后缀表达式"}},[a._v("#")]),a._v(" 后缀表达式")]),a._v(" "),r("ul",[r("li",[a._v("中缀表达式碰到运算数时，不知道是否需要运算，需要向后看")]),a._v(" "),r("li",[a._v("后缀表达式碰到运算符后，其运算数是其之前的两个运算数，直接运算即可\n"),r("ul",[r("li",[a._v("遇到运算数，记住")]),a._v(" "),r("li",[a._v("遇到运算符号，对最近的的两个运算数进行计算，生成新的运算数")])])])]),a._v(" "),r("h2",{attrs:{id:"堆栈的抽象数据类型描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆栈的抽象数据类型描述"}},[a._v("#")]),a._v(" 堆栈的抽象数据类型描述")]),a._v(" "),r("h2",{attrs:{id:"堆栈的实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆栈的实现"}},[a._v("#")]),a._v(" 堆栈的实现")]),a._v(" "),r("h3",{attrs:{id:"堆栈的顺序存储实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆栈的顺序存储实现"}},[a._v("#")]),a._v(" 堆栈的顺序存储实现")]),a._v(" "),r("h4",{attrs:{id:"示例-用一个数组实现两个堆栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例-用一个数组实现两个堆栈"}},[a._v("#")]),a._v(" 示例: 用一个数组实现两个堆栈")]),a._v(" "),r("h3",{attrs:{id:"堆栈的链式存储实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#堆栈的链式存储实现"}},[a._v("#")]),a._v(" 堆栈的链式存储实现")]),a._v(" "),r("ul",[r("li",[a._v("TOP 位于链表的头部")]),a._v(" "),r("li",[a._v("中缀表达式转换为后缀表达式\n"),r("ul",[r("li",[a._v("运算数直接输出")]),a._v(" "),r("li",[a._v("括号有单独的处理逻辑")]),a._v(" "),r("li",[a._v("符号栈")])])])])],1)}),[],!1,null,null,null);"function"==typeof _&&_(e);t.default=e.exports}}]);