(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{711:function(s,t,a){"use strict";a.r(t);var n=a(12),e=function(s){s.options.__data__block__={markmap_64a570e4:"- [第 8 章 异常控制流](#第-8-章-异常控制流)\n  - [8.1 异常](#81-异常)\n    - [8.1.1 异常处理](#811-异常处理)\n    - [8.1.2 异常类别](#812-异常类别)\n    - [8.1.3 Linux/x86-64 系统中的异常](#813-linuxx86-64-系统中的异常)\n  - [8.2 进程](#82-进程)\n    - [8.2.1 逻辑控制流](#821-逻辑控制流)\n    - [8.2.2 并发流](#822-并发流)\n    - [8.2.3 私有地址空间](#823-私有地址空间)\n    - [8.2.4 用户模式和内核模式](#824-用户模式和内核模式)\n    - [8.2.5 上下文切换](#825-上下文切换)\n  - [8.3 系统调用异常处理](#83-系统调用异常处理)\n  - [8.4 进程控制](#84-进程控制)\n    - [8.4.1 获取进程 ID](#841-获取进程-id)\n    - [8.4.2 创建和终止进程](#842-创建和终止进程)\n    - [8.4.3 回收子进程](#843-回收子进程)\n    - [8.4.4 让进程休眠](#844-让进程休眠)\n    - [8.4.5 加载并运行程序](#845-加载并运行程序)\n    - [8.4.6 利用 `fork` 和 `execve` 来运行程序](#846-利用-fork-和-execve-来运行程序)\n  - [8.5 信号](#85-信号)\n    - [8.5.1 信号术语](#851-信号术语)\n    - [8.5.2 发送信号](#852-发送信号)\n    - [8.5.3 接收信号](#853-接收信号)\n    - [8.5.4 阻塞和解除阻塞信号](#854-阻塞和解除阻塞信号)\n    - [8.5.5 编写信号处理程序](#855-编写信号处理程序)\n    - [8.5.6 同步流以避免讨厌的并发错误](#856-同步流以避免讨厌的并发错误)\n    - [8.5.7 显式地等待信号](#857-显式地等待信号)\n  - [8.6 非本地跳转](#86-非本地跳转)\n  - [8.7 操作进程的工具](#87-操作进程的工具)"}},r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第-8-章-异常控制流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第-8-章-异常控制流"}},[s._v("#")]),s._v(" 第 8 章 异常控制流")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("引言")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("控制流 (flow of control 或 control flow) 的定义")]),s._v(" "),a("ul",[a("li",[s._v("从当前指令到下一条指令的过渡称为控制转换 (control transfer)")]),s._v(" "),a("li",[s._v("控制转移的序列称为控制流")])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("异常控制流 (Exception Control FLow，ECF) 的定义")]),s._v(" "),a("ul",[a("li",[s._v("系统必须能够对系统状态的变化做出反应")]),s._v(" "),a("li",[s._v("现代系统通过使控制流发生突变来对系统状态的变化做出反应\n"),a("ul",[a("li",[s._v("把这些突变称为异常控制流")]),s._v(" "),a("li",[s._v("突变是相对于平滑的控制流而言的")])])])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("ECF 的应用")]),s._v(" "),a("ul",[a("li",[s._v("ECF 是操作系统用来实现 I/O、进程和虚拟内存的基本机制")]),s._v(" "),a("li",[s._v("应用程序通过使用一个叫做陷阱（trap）或者系统调用（system call）的 ECF 形式，向操作系统请求服务\n"),a("ul",[a("li",[s._v("操作系统为应用程序提供了强大的 ECF 机制\n"),a("ul",[a("li",[s._v("用来创建新进程、等待进程终止")]),s._v(" "),a("li",[s._v("通知其他进程系统中的异常事件，以及检测和响应这些事件")])])])])]),s._v(" "),a("li",[s._v("ECF 是计算机系统中实现并发的基本机制")]),s._v(" "),a("li",[s._v("软件异常允许程序进行非本地跳转（即违反通常的调用/返回栈规则的跳转）来响应错误情况\n"),a("ul",[a("li",[s._v("非本地跳转是一种应用层 ECF")])])])])])])])]),s._v(" "),a("Markmap",{attrs:{id:"markmap_64a570e4",code:s.$dataBlock.markmap_64a570e4}}),a("h2",{attrs:{id:"81-异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#81-异常"}},[s._v("#")]),s._v(" 8.1 异常")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("异常的基本概念")]),s._v(" "),a("ul",[a("li",[s._v("异常是异常控制流的一种形式，它一部分由硬件实现，一部分由操作系统实现")]),s._v(" "),a("li",[s._v("异常（exception）就是控制流中的突变，用来响应处理器状态中的某些变化\n"),a("ul",[a("li",[s._v("处理器状态中的变化（事件）触发从应用程序到异常处理程序的突发的控制转移（异常）")]),s._v(" "),a("li",[s._v("在异常处理程序完成处理后，它将控制返回给被中断的程序或者终止")]),s._v(" "),a("li",[a("details",{staticClass:"custom-block details"},[a("summary",[s._v("示意图")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228111651-2022-02-28-11-16-51.png",alt:"20220228111651-2022-02-28-11-16-51"}})])])])])]),s._v(" "),a("li",[s._v("状态变化称为"),a("strong",[s._v("事件")]),s._v("（event)\n"),a("ul",[a("li",[s._v("事件可能和当前指令的执行直接相关\n"),a("ul",[a("li",[s._v("发生虚拟内存缺页、算术溢出，或者一条指令试图除以零")])])]),s._v(" "),a("li",[s._v("事件也可能和当前指令的执行没有关系\n"),a("ul",[a("li",[s._v("一个系统定时器产生信号或者一个 I/O 请求完成")])])])])])])]),s._v(" "),a("h3",{attrs:{id:"811-异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#811-异常处理"}},[s._v("#")]),s._v(" 8.1.1 异常处理")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("异常号与异常表")]),s._v(" "),a("ul",[a("li",[s._v("系统中可能的每种类型的异常都分配了一个唯一的非负整数的"),a("strong",[s._v("异常号")]),s._v("（exception number）\n"),a("ul",[a("li",[s._v("一些号码是由处理器的设计者分配的\n"),a("ul",[a("li",[s._v("包括被零除、缺页、内存访问违例、断点以及算术运算溢出")])])]),s._v(" "),a("li",[s._v("其他号码是由操作系统内核（操作系统常驻内存的部分）的设计者分配的\n"),a("ul",[a("li",[s._v("包括系统调用和来自外部 I/O 设备的信号")])])])])]),s._v(" "),a("li",[s._v("在系统启动时（当计算机重启或者加电时），操作系统分配和初始化一张称为"),a("strong",[s._v("异常表")]),s._v("的"),a("strong",[s._v("跳转表")]),s._v("，使得表目 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" 包含异常 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" 的处理程序的地址\n"),a("ul",[a("li",[a("details",{staticClass:"custom-block details"},[a("summary",[s._v("异常表的示意图")]),s._v(" "),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228112319-2022-02-28-11-23-19.png",alt:"20220228112319-2022-02-28-11-23-19"}})])])])])])],1),s._v(" "),a("li",[s._v("异常表的起始地址放在一个叫做"),a("strong",[s._v("异常表基址寄存器")]),s._v("（exception table base register）的特殊 CPU 寄存器里\n"),a("ul",[a("li",[a("details",{staticClass:"custom-block details"},[a("summary",[s._v("异常处理程序地址的生成")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228112519-2022-02-28-11-25-19.png",alt:"20220228112519-2022-02-28-11-25-19"}})])])])])])])]),s._v(" "),a("h3",{attrs:{id:"812-异常类别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#812-异常类别"}},[s._v("#")]),s._v(" 8.1.2 异常类别")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("四类异常")]),s._v(" "),a("ul",[a("li",[s._v("异常可以分为四类："),a("strong",[s._v("中断")]),s._v("（interrupt），"),a("strong",[s._v("陷阱")]),s._v("（trap）、"),a("strong",[s._v("故障")]),s._v("（fault）和"),a("strong",[s._v("终止")]),s._v("（abort）\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228112713-2022-02-28-11-27-13.png",alt:"20220228112713-2022-02-28-11-27-13"}})])])])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("中断")]),s._v(" "),a("ul",[a("li",[s._v("中断是异步发生的，是来自处理器外部的 I/O 设备的信号的结果\n"),a("ul",[a("li",[s._v("硬件中断不是由任何一条专门的指令造成的，从这个意义上来说它是异步的")])])]),s._v(" "),a("li",[s._v("硬件中断的异常处理程序常常称为中断处理程序（interrupt handler）")]),s._v(" "),a("li",[s._v("中断处理过程\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228113311-2022-02-28-11-33-11.png",alt:"20220228113311-2022-02-28-11-33-11"}})])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("陷阱和系统调用")]),s._v(" "),a("ul",[a("li",[s._v("陷阱是有意的异常，是执行一条指令的结果\n"),a("ul",[a("li",[s._v("陷阱处理程序将控制返回到下一条指令")])])]),s._v(" "),a("li",[s._v("陷阱最重要的用途是在用户程序和内核之间提供一个像过程一样的接口，叫做系统调用")]),s._v(" "),a("li",[s._v("陷阱处理过程\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228113500-2022-02-28-11-35-01.png",alt:"20220228113500-2022-02-28-11-35-01"}})])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("系统调用和普通函数调用的区别")]),s._v(" "),a("ul",[a("li",[s._v("普通的函数运行在用户模式中\n"),a("ul",[a("li",[s._v("用户模式限制了函数可以执行的指令的类型")]),s._v(" "),a("li",[s._v("而且它们只能访问与调用函数相同的栈")])])]),s._v(" "),a("li",[s._v("系统调用运行在内核模式中\n"),a("ul",[a("li",[s._v("内核模式允许系统调用执行特权指令")]),s._v(" "),a("li",[s._v("并访问定义在内核中的栈")])])])])])])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("故障")]),s._v(" "),a("ul",[a("li",[s._v("故障由错误情况引起，它可能能够被故障处理程序修正")]),s._v(" "),a("li",[s._v("当故障发生时，处理器将控制转移给故障处理程序\n"),a("ul",[a("li",[s._v("如果处理程序能够修正这个错误情况，它就将控制返回到引起故障的指令，从而重新执行它\n"),a("ul",[a("li",[s._v("比如虚拟内存中的缺页异常")])])]),s._v(" "),a("li",[s._v("否则，处理程序返回到内核中的 "),a("code",[s._v("abort")]),s._v(" 例程")]),s._v(" "),a("li",[a("code",[s._v("abort")]),s._v(" 例程会终止引起故障的应用程序")])])]),s._v(" "),a("li",[s._v("故障处理示意图\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228113953-2022-02-28-11-39-53.png",alt:"20220228113953-2022-02-28-11-39-53"}})])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("终止")]),s._v(" "),a("ul",[a("li",[s._v("终止是不可恢复的致命错误造成的结果\n"),a("ul",[a("li",[s._v("通常是一些硬件错误，比如 DRAM 或者 SRAM 位被损坏时发生的奇偶错误")])])]),s._v(" "),a("li",[s._v("终止处理程序从不将控制返回给应用程序")]),s._v(" "),a("li",[s._v("终止处理示意图\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228114037-2022-02-28-11-40-37.png",alt:"20220228114037-2022-02-28-11-40-37"}})])])])])]),s._v(" "),a("h3",{attrs:{id:"813-linuxx86-64-系统中的异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#813-linuxx86-64-系统中的异常"}},[s._v("#")]),s._v(" 8.1.3 Linux/x86-64 系统中的异常")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("x86-64 系统中定义的一些异常")]),s._v(" "),a("ul",[a("li",[s._v("有 256 种不同的异常类型\n"),a("ul",[a("li",[s._v("0-31 的号码对应的是由 Intel 架构师定义的异常")]),s._v(" "),a("li",[s._v("32 - 255 的号码对应的是操作系统定义的中断和陷阱")])])]),s._v(" "),a("li",[s._v("异常示例\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228114502-2022-02-28-11-45-02.png",alt:"20220228114502-2022-02-28-11-45-02"}})]),s._v(" "),a("li",[s._v("一般保护故障（异常 13）\n"),a("ul",[a("li",[s._v("通常是因为一个程序引用了一个未定义的虚拟内存区域")]),s._v(" "),a("li",[s._v("或者因为程序试图写一个只读的文本段")]),s._v(" "),a("li",[s._v("Linux 不会尝试恢复这类故障\n"),a("ul",[a("li",[s._v("Linux shell 通常会把这种一般保护故障报告为 "),a("code",[s._v("Segmentation fault")])])])])])])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Linux x86-64 系统调用")]),s._v(" "),a("ul",[a("li",[s._v("常用的系统调用\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228114808-2022-02-28-11-48-08.png",alt:"20220228114808-2022-02-28-11-48-08"}})])])]),s._v(" "),a("li",[s._v("C 程序用 "),a("code",[s._v("syscall")]),s._v(" 函数可以直接调用任何系统调用\n"),a("ul",[a("li",[s._v("将系统调用和与它们相关联的包装函数都称为"),a("strong",[s._v("系统级函数")])])])]),s._v(" "),a("li",[s._v("所有到 Linux 系统调用的参数都是通过通用寄存器而不是栈传递的，按照惯例\n"),a("ul",[a("li",[s._v("寄存器 "),a("code",[s._v("%rax")]),s._v(" 包含系统调用号")]),s._v(" "),a("li",[s._v("寄存器 "),a("code",[s._v("%rdi、%rsi、%rdx、%r10、%r8")]),s._v("  和 "),a("code",[s._v("%r9")]),s._v(" 包含最多 6 个参数")]),s._v(" "),a("li",[a("code",[s._v("%rax")]),s._v(" 包含返回值")])])])])]),s._v(" "),a("h2",{attrs:{id:"82-进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#82-进程"}},[s._v("#")]),s._v(" 8.2 进程")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("进程的基本概念")]),s._v(" "),a("ul",[a("li",[s._v("异常是允许操作系统内核提供进程（process）概念的基本构造块\n"),a("ul",[a("li",[s._v("进程是计算机科学中最深刻、最成功的概念之一")])])]),s._v(" "),a("li",[s._v("进程是一个执行中程序的实例\n"),a("ul",[a("li",[s._v("系统中的每个程序都运行在某个进程的"),a("strong",[s._v("上下文")]),s._v("（context）中")]),s._v(" "),a("li",[s._v("上下文是由程序正确运行所需的状态组成的\n"),a("ul",[a("li",[s._v("这个状态包括\n"),a("ul",[a("li",[s._v("存放在内存中的程序的代码和数据")]),s._v(" "),a("li",[s._v("栈、通用目的寄存器的内容、程序计数器")]),s._v(" "),a("li",[s._v("打开文件描述符的集合")]),s._v(" "),a("li",[s._v("内核栈和各种内核数据结构\n"),a("ul",[a("li",[s._v("比如描述地址空间的页表")]),s._v(" "),a("li",[s._v("包含有关当前进程信息的进程表")])])])])])])])])]),s._v(" "),a("li",[s._v("进程提供给应用程序的关键抽象\n"),a("ul",[a("li",[s._v("一个独立的逻辑控制流\n"),a("ul",[a("li",[s._v("它提供一个假象，好像我们的程序独占地使用处理器")])])]),s._v(" "),a("li",[s._v("一个私有的地址空间\n"),a("ul",[a("li",[s._v("它提供一个假象，好像我们的程序独占地使用内存系统")])])])])])])]),s._v(" "),a("h3",{attrs:{id:"821-逻辑控制流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#821-逻辑控制流"}},[s._v("#")]),s._v(" 8.2.1 逻辑控制流")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("逻辑控制流示意图")]),s._v(" "),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228120226-2022-02-28-12-02-26.png",alt:"20220228120226-2022-02-28-12-02-26"}})]),s._v(" "),a("li",[s._v("关键点在于进程是轮流使用处理器的\n"),a("ul",[a("li",[s._v("每个进程执行它的流的一部分，然后被"),a("strong",[s._v("抢占")]),s._v("（preempted）（暂时挂起）")]),s._v(" "),a("li",[s._v("然后轮到其他进程")])])])])]),s._v(" "),a("h3",{attrs:{id:"822-并发流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#822-并发流"}},[s._v("#")]),s._v(" 8.2.2 并发流")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("并发流的概念")]),s._v(" "),a("ul",[a("li",[s._v("一个逻辑流的执行在"),a("strong",[s._v("时间上")]),s._v("与另一个流重叠，称为"),a("strong",[s._v("并发流")]),s._v("（concurrent flow），这两个流被称为"),a("strong",[s._v("并发地运行")])]),s._v(" "),a("li",[s._v("多个流并发地执行的一般现象被称为"),a("strong",[s._v("并发")]),s._v("（concurrency")]),s._v(" "),a("li",[s._v("一个进程和其他进程轮流运行的概念称为"),a("strong",[s._v("多任务")]),s._v("（multitasking）\n"),a("ul",[a("li",[s._v("一个进程执行它的控制流的一部分的每一时间段叫做"),a("strong",[s._v("时间片")]),s._v("（time slice）")]),s._v(" "),a("li",[s._v("因此，多任务也叫做"),a("strong",[s._v("时间分片")]),s._v("（time slicing）")])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("并行的概念")]),s._v(" "),a("ul",[a("li",[s._v("如果两个流并发地运行在"),a("strong",[s._v("不同的处理器核或者计算机")]),s._v("上，那么我们称它们为"),a("strong",[s._v("并行流")]),s._v("（parallel flow）")]),s._v(" "),a("li",[s._v("它们"),a("strong",[s._v("并行地运行")]),s._v("（running in parallel），且"),a("strong",[s._v("并行地执行")]),s._v("（parallel execution）")])])]),s._v(" "),a("h3",{attrs:{id:"823-私有地址空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#823-私有地址空间"}},[s._v("#")]),s._v(" 8.2.3 私有地址空间")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("私有地址空间的内容")]),s._v(" "),a("ul",[a("li",[s._v("进程为每个程序提供它自己的私有地址空间\n"),a("ul",[a("li",[s._v("一般而言，和这个空间中某个地址相关联的那个内存字节是不能被其他进程读或者写的")]),s._v(" "),a("li",[s._v("从这个意义上说，这个地址空间是私有的")])])]),s._v(" "),a("li",[s._v("私有空间有相同的通用结构\n"),a("ul",[a("li",[s._v("进程地址空间示意图\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228121532-2022-02-28-12-15-32.png",alt:"20220228121532-2022-02-28-12-15-32"}})])])]),s._v(" "),a("li",[s._v("地址空间底部是保留给用户程序的\n"),a("ul",[a("li",[s._v("包括通常的代码、数据、堆和栈段")]),s._v(" "),a("li",[s._v("代码段总是从地址 0x400000 开始")])])]),s._v(" "),a("li",[s._v("地址空间顶部保留给内核（操作系统常驻内存的部分）\n"),a("ul",[a("li",[s._v("包含内核在代表进程执行指令时（比如当应用程序执行系统调用时）使用的代码、数据和栈")])])])])])])]),s._v(" "),a("h3",{attrs:{id:"824-用户模式和内核模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#824-用户模式和内核模式"}},[s._v("#")]),s._v(" 8.2.4 用户模式和内核模式")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("用户模式和内核模式的主要内容")]),s._v(" "),a("ul",[a("li",[s._v("为了给操作系统内核提供一个进程抽象，处理器需要限制一个应用可以执行的指令以及它可以访问的地址空间范围")]),s._v(" "),a("li",[s._v("处理器通常是用某个控制寄存器中的一个模式位（mode bit）来描述进程当前享有的特权\n"),a("ul",[a("li",[s._v("当设置了模式位时，进程就运行在"),a("strong",[s._v("内核模式")]),s._v("中（有时叫做超级用户模式）\n"),a("ul",[a("li",[s._v("一个运行在内核模式的进程可以执行指令集中的任何指令，并且可以访问系统中的任何内存位置")])])]),s._v(" "),a("li",[s._v("没有设置模式位时，进程就运行在"),a("strong",[s._v("用户模式")]),s._v("中\n"),a("ul",[a("li",[s._v("用户模式中的进程不允许执行特权指令（privileged instruction）\n"),a("ul",[a("li",[s._v("比如停止处理器、改变模式位，或者发起一个 I/O 操作")])])]),s._v(" "),a("li",[s._v("也不允许用户模式中的进程直接引用地址空间中内核区内的代码和数据\n"),a("ul",[a("li",[s._v("任何这样的尝试都会导致致命的保护故障")])])]),s._v(" "),a("li",[s._v("用户程序必须通过系统调用接口间接地访问内核代码和数据")])])])])]),s._v(" "),a("li",[s._v("进程从用户模式变为内核模式的唯一方法是通过诸如中断、故障或者陷入系统调用这样的异常")]),s._v(" "),a("li",[s._v("Linux 中的 "),a("code",[s._v("/proc")]),s._v(" 文件系统，它允许用户模式进程访问内核数据结构的内容\n"),a("ul",[a("li",[s._v("比如 CPU 类型（"),a("code",[s._v("/proc/cpuinfo")]),s._v("）")]),s._v(" "),a("li",[s._v("或者某个特殊的进程使用的内存段（"),a("code",[s._v("/proc/<process-id>/maps")]),s._v(")")])])])])]),s._v(" "),a("h3",{attrs:{id:"825-上下文切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#825-上下文切换"}},[s._v("#")]),s._v(" 8.2.5 上下文切换")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("上下文切换的基本内容")]),s._v(" "),a("ul",[a("li",[s._v("操作系统内核使用一种称为上下文切换（context switch）的较高层形式的异常控制流来实现多任务\n"),a("ul",[a("li",[s._v("上下文可以理解为内核重新启动一个被抢占的进程所需的状态")])])]),s._v(" "),a("li",[s._v("调度（scheduling）\n"),a("ul",[a("li",[s._v("在进程执行的某些时刻，内核可以决定抢占当前进程，并重新开始一个先前被抢占了的进程。这种决策就叫做调度（scheduling)")]),s._v(" "),a("li",[s._v("调度是由内核中称为调度器（scheduler）的代码处理的")]),s._v(" "),a("li",[s._v("当内核选择一个新的进程运行时，我们说内核调度了这个进程")]),s._v(" "),a("li",[s._v("在内核调度了一个新的进程运行后，它就抢占当前进程，并使用一种称为上下文切换的机制来将控制转移到新的进程")])])]),s._v(" "),a("li",[s._v("上下文切换的过程\n"),a("ul",[a("li",[s._v("保存当前进程的上下文")]),s._v(" "),a("li",[s._v("恢复某个先前被抢占的进程被保存的上下文")]),s._v(" "),a("li",[s._v("将控制传递给这个新恢复的进程")])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("DMA 传输示例")]),s._v(" "),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228123554-2022-02-28-12-35-55.png",alt:"20220228123554-2022-02-28-12-35-55"}})]),s._v(" "),a("li",[s._v("在等待磁盘传输数据的过程中， CPU 可以去执行其它进程")]),s._v(" "),a("li",[s._v("磁盘传输完成后，会产生磁盘中断信号，这时操作系统可以切换到进程 A 继续执行")])])]),s._v(" "),a("h2",{attrs:{id:"83-系统调用异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#83-系统调用异常处理"}},[s._v("#")]),s._v(" 8.3 系统调用异常处理")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("当 Unix 系统级函数遇到错误时，它们通常会返回 —1，并设置全局整数变量 "),a("code",[s._v("errno ")]),s._v(" 来表示什么出错了")])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("错误处理包装函数")]),s._v(" "),a("ul",[a("li",[s._v("为了避免代码变得臃肿，可以对系统级函数使用错误处理包装函数\n"),a("ul",[a("li",[s._v("包装函数调用基本函数，检査错误，如果有任何问题就终止")])])]),s._v(" "),a("li",[a("details",{staticClass:"custom-block details"},[a("summary",[s._v("程序示例")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("unix_error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Unix-style error */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fprintf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("stderr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s: %s\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("strerror")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("errno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("unix_error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fork error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])])])])]),s._v(" "),a("h2",{attrs:{id:"84-进程控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#84-进程控制"}},[s._v("#")]),s._v(" 8.4 进程控制")]),s._v(" "),a("h3",{attrs:{id:"841-获取进程-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#841-获取进程-id"}},[s._v("#")]),s._v(" 8.4.1 获取进程 ID")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("每个进程都有一个唯一的正数（非零）进程 ID（PID）")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getpid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getppid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：调用者或其父进程的 PID")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])])]),s._v(" "),a("h3",{attrs:{id:"842-创建和终止进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#842-创建和终止进程"}},[s._v("#")]),s._v(" 8.4.2 创建和终止进程")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("从程序员的角度来看，进程总是处于下面三种状态之一")]),s._v(" "),a("ul",[a("li",[s._v("运行\n"),a("ul",[a("li",[s._v("进程要么在 CPU 上 执行，要么在等待被执行且最终会被内核调度")])])]),s._v(" "),a("li",[s._v("停止\n"),a("ul",[a("li",[s._v("进程的执行被挂起（suspended），且不会被调度")]),s._v(" "),a("li",[s._v("当收到 "),a("code",[s._v("SIGSTOP、SIGTSTP、SIGTTIN")]),s._v(" 或者 "),a("code",[s._v("SIGTTOU")]),s._v(" 信号时，进程就停止")]),s._v(" "),a("li",[s._v("并且保持停止直到它收到一个 "),a("code",[s._v("SIGCONT")]),s._v(" 信号，在这个时刻，进程再次开始运行")])])]),s._v(" "),a("li",[s._v("终止\n"),a("ul",[a("li",[s._v("进程永远地停止了。进程会因为三种原因终止：\n"),a("ul",[a("li",[s._v("收到一个信号，该信号的默认行为是终止进程")]),s._v(" "),a("li",[s._v("从主程序返回")]),s._v(" "),a("li",[s._v("调用 "),a("code",[s._v("exit")]),s._v(" 函数")])])])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("exit")]),s._v(" 函数以 "),a("code",[s._v("status")]),s._v(" 退出状态来终止进程")]),s._v(" "),a("ul",[a("li",[s._v("另一种设置退出状态的方法是从主程序中返回一个整数值")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdlib.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该函数不返回")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("父进程通过调用 "),a("code",[s._v("fork")]),s._v(" 函数创建一个新的运行的子进程")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：子进程返回 0，父进程返回子进程的 PID，如果出错，则为 -1。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("新创建的子进程几乎但不完全与父进程相同\n"),a("ul",[a("li",[s._v("子进程得到与父进程用户级虚拟地址空间相同的（但是独立的）一份副本\n"),a("ul",[a("li",[s._v("包括代码和数据段、堆、共享库以及用户栈")])])]),s._v(" "),a("li",[s._v("子进程还获得与父进程任何打开文件描述符相同的副本\n"),a("ul",[a("li",[s._v("意味着当父进程调用 fork 时，子进程可以读写父进程中打开的任何文件")])])]),s._v(" "),a("li",[s._v("父进程和新创建的子进程之间最大的区别在于它们有不同的 PID")])])]),s._v(" "),a("li",[a("code",[s._v("fork")]),s._v(" 函数只被调用一次，却会返回两次\n"),a("ul",[a("li",[s._v("一次是在调用进程（父进程）中\n"),a("ul",[a("li",[s._v("在父进程中，"),a("code",[s._v("fork")]),s._v(" 返回子进程的 PID")])])]),s._v(" "),a("li",[s._v("一次是在新创建的子进程中\n"),a("ul",[a("li",[s._v("在子进程中，"),a("code",[s._v("fork")]),s._v(" 返回 0")])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("因为子进程的 PID 总是为非零，返回值就提供一个明确的方法来分辨程序是在父进程还是在子进程中执行")])])])])]),s._v(" "),a("li",[s._v("父进程和子进程是并发运行的独立进程\n"),a("ul",[a("li",[s._v("内核能够以"),a("strong",[s._v("任意方式")]),s._v("交替执行它们的逻辑控制流中的指令")])])])])]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("使用 "),a("code",[s._v("fork")]),s._v(" 时，编译时的命令")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("gcc fork.c "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/src/csapp.c -o fork -I "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/include -lpthread\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("h3",{attrs:{id:"843-回收子进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#843-回收子进程"}},[s._v("#")]),s._v(" 8.4.3 回收子进程")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("僵死进程 (zombie)")]),s._v(" "),a("ul",[a("li",[s._v("当一个进程由于某种原因终止时，内核并不是立即把它从系统中清除\n"),a("ul",[a("li",[s._v("相反，进程被保持在一种已终止的状态中，直到被它的父进程回收（reaped）")]),s._v(" "),a("li",[s._v("当父进程回收已终止的子进程时，内核将子进程的退出状态传递给父进程，然后抛弃已终止的进程\n"),a("ul",[a("li",[s._v("从此时开始，该进程就不存在了")])])])])]),s._v(" "),a("li",[a("strong",[s._v("一个终止了但还未被回收的进程")]),s._v("称为僵死进程")]),s._v(" "),a("li",[s._v("如果一个父进程终止了，内核会安排 "),a("code",[s._v("init")]),s._v(" 进程成为它的孤儿进程的养父\n"),a("ul",[a("li",[a("code",[s._v("init")]),s._v(" 进程的 PID 为 "),a("code",[s._v("1")]),s._v(" "),a("ul",[a("li",[s._v("是在系统启动时由内核创建的，它不会终止，是所有进程的祖先")])])])])]),s._v(" "),a("li",[s._v("但对于长时间运行的程序，比如 shell 或者服务器，总是应该回收它们的僵死子进程\n"),a("ul",[a("li",[s._v("因为即使僵死子进程没有运行，它们仍然消耗系统的内存资源")])])])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("一个进程可以通过调用 `waitpid` 函数来等待它的子进程终止或者停止")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("函数原型")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/wait.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("waitpid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("statusp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：如果成功，则为子进程的 PID，如果 options 为 WNOHANG，且任何子进程都还没有终止，则为 0，如果其他错误，则为 -1。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("默认情况")]),s._v(" "),a("ul",[a("li",[s._v("默认情况下（当 "),a("code",[s._v("options=0")]),s._v(" 时）\n"),a("ul",[a("li",[a("code",[s._v("waitpid")]),s._v(" 挂起调用进程的执行，直到它的等待集合（wait set）中的一个子进程终止")]),s._v(" "),a("li",[s._v("如果等待集合中的一个进程在刚调用的时刻就已经终止了，那么 "),a("code",[s._v("waitpid")]),s._v(" 就立即返回")])])]),s._v(" "),a("li",[s._v("在这两种情况中，"),a("code",[s._v("waitpid")]),s._v(" 返回导致 "),a("code",[s._v("waitpid")]),s._v(" 返回的已终止子进程的 PID\n"),a("ul",[a("li",[s._v("此时，已终止的子进程已经被回收，内核会从系统中删除掉它的所有痕迹")])])])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("指定等待集合的成员， "),a("code",[s._v("pid")]),s._v(" 参数")]),s._v(" "),a("ul",[a("li",[s._v("由参数 "),a("code",[s._v("pid")]),s._v(" 来确定\n"),a("ul",[a("li",[s._v("如果 "),a("code",[s._v("pid>0")]),s._v("，那么等待集合就是一个单独的子进程，它的进程 ID 等于 "),a("code",[s._v("pid")])]),s._v(" "),a("li",[s._v("如果 "),a("code",[s._v("pid=-1")]),s._v("，那么等待集合就是由父进程所有的子进程组成的")])])])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("修改默认行为，"),a("code",[s._v("options")]),s._v(" 参数")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("WNOHANG")]),s._v(" "),a("ul",[a("li",[s._v("如果等待集合中的任何子进程都还没有终止，那么就立即返回（返回值为 0）")]),s._v(" "),a("li",[s._v("默认的行为是挂起调用进程，直到有子进程终止")])])]),s._v(" "),a("li",[a("code",[s._v("WUNTRACED")]),s._v(" "),a("ul",[a("li",[s._v("挂起调用进程的执行，直到等待集合中的一个进程变成已终止或者被停止")]),s._v(" "),a("li",[s._v("默认的行为是只返回已终止的子进程")])])]),s._v(" "),a("li",[a("code",[s._v("WCONTINUED")]),s._v(" "),a("ul",[a("li",[s._v("挂起调用进程的执行，直到等待集合中一个正在运行的进程终止或等待集合中一个被停止的进程收到 "),a("code",[s._v("SIGCONT")]),s._v(" 信号重新开始执行")])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("可以用或运算把这些选项组合起来")])])])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("检查已回收子进程的退出状态 "),a("code",[s._v("statusp")])]),s._v(" "),a("ul",[a("li",[s._v("如果 "),a("code",[s._v("statusp")]),s._v(" 参数是非空的\n"),a("ul",[a("li",[s._v("那么 "),a("code",[s._v("waitpid")]),s._v(" 就会在 "),a("code",[s._v("status")]),s._v(" 中放上关于导致返回的子进程的状态信息")]),s._v(" "),a("li",[a("code",[s._v("status")]),s._v(" 是 "),a("code",[s._v("statusp")]),s._v(" 指向的值")])])]),s._v(" "),a("li",[s._v("wait.h 头文件定义了解释 "),a("code",[s._v("status")]),s._v(" 参数的几个宏\n"),a("ul",[a("li",[a("code",[s._v("WIFEXITED(status)")]),s._v(" "),a("ul",[a("li",[s._v("如果于进程通过调用 "),a("code",[s._v("exit")]),s._v(" 或者一个返回（"),a("code",[s._v("return")]),s._v("）正常终止，就返回真")])])]),s._v(" "),a("li",[a("code",[s._v("WEXITSTATUS(status)")]),s._v(" "),a("ul",[a("li",[s._v("返回一令正常终止的子进程的退出状态")]),s._v(" "),a("li",[s._v("只有在 "),a("code",[s._v("WIFEXITED()")]),s._v(" 返回为真时，才会定义这个状态")])])]),s._v(" "),a("li",[a("code",[s._v("WIFSIGNALED(status)")]),s._v(" "),a("ul",[a("li",[s._v("如果子进程是因为一个未被捕获的信号终止的，那么就返回真")])])]),s._v(" "),a("li",[a("code",[s._v("WTERMSIG(status)")]),s._v(" "),a("ul",[a("li",[s._v("返回导致子进程终止的信号的编号")]),s._v(" "),a("li",[s._v("只有在 "),a("code",[s._v("WIFSIGNALED()")]),s._v(" 返回为真时，才定义这个状态")])])]),s._v(" "),a("li",[a("code",[s._v("WIFSTOPPED(status)")]),s._v(" "),a("ul",[a("li",[s._v("如果引起返回的子进程当前是停止的，那么就返回真")])])]),s._v(" "),a("li",[a("code",[s._v("WSTOPSIG(status)")]),s._v(" "),a("ul",[a("li",[s._v("返回引起子进程停止的信号的编号")]),s._v(" "),a("li",[s._v("只有在 "),a("code",[s._v("WIFSTOPPED()")]),s._v(" 返回为真时，才定义这个状态")])])]),s._v(" "),a("li",[a("code",[s._v("WIFCONTINUED(status)")]),s._v(" "),a("ul",[a("li",[s._v("如果子进程收到 "),a("code",[s._v("SIGCONT")]),s._v(" 信号重新启动，则返回真")])])])])])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("错误时的返回")]),s._v(" "),a("ul",[a("li",[s._v("如果调用进程没有子进程，那么 "),a("code",[s._v("waitpid")]),s._v(" 返回 -1，并且设置 "),a("code",[s._v("errno")]),s._v(" 为 "),a("code",[s._v("ECHILD")])]),s._v(" "),a("li",[s._v("如果 "),a("code",[s._v("waitpid")]),s._v(" 函数被一个信号中断，那么它返回 -1，并设置 "),a("code",[s._v("errno")]),s._v(" 为 "),a("code",[s._v("EINTR")])])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("wait")]),s._v(" 函数")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("wait")]),s._v(" 函数是 "),a("code",[s._v("waitpid")]),s._v(" 的简单版本")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/wait.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("statusp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：如果成功，则为子进程的 PID，如果出错，则为 -1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("调用 "),a("code",[s._v("wait(&status)")]),s._v(" 等价于调用 "),a("code",[s._v("waitpid(-1, &status, 0)")])])])])])])]),s._v(" "),a("h3",{attrs:{id:"844-让进程休眠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#844-让进程休眠"}},[s._v("#")]),s._v(" 8.4.4 让进程休眠")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("sleep")]),s._v(" 函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：还要休眠的秒数。如果 sleep 函数被一个信号中断而过早地返回，其返回值可能大于 0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("pause")]),s._v(" 函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pause")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 总是返回 -1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("该函数让调用函数休眠，直到该进程收到一个信号")])])]),s._v(" "),a("h3",{attrs:{id:"845-加载并运行程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#845-加载并运行程序"}},[s._v("#")]),s._v(" 8.4.5 加载并运行程序")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("execve")]),s._v(" 函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("execve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("envp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果成功，则不返回，如果错误，则返回 -1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[a("p",[a("code",[s._v("execve")]),s._v(" 函数在当前进程的上下文中加载并运行一个新程序")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("execve")]),s._v(" 函数加载并运行可执行目标文件 "),a("code",[s._v("filename")])]),s._v(" "),a("ul",[a("li",[s._v("且带参数列表 "),a("code",[s._v("argv")]),s._v(" 和环境变量列表 "),a("code",[s._v("envp")])]),s._v(" "),a("li",[s._v("只有当出现错误时，例如找不到 "),a("code",[s._v("filename")]),s._v("，"),a("code",[s._v("execve")]),s._v(" 才会返回到调用程序")]),s._v(" "),a("li",[s._v("否则，"),a("code",[s._v("execve")]),s._v(" 调用一次并从不返回")])])]),s._v(" "),a("li",[a("p",[s._v("新程序的主函数有如下形式的原型")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("envp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("参数列表的组织结构\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228151322-2022-02-28-15-13-22.png",alt:"20220228151322-2022-02-28-15-13-22"}})])]),s._v(" "),a("li",[a("p",[s._v("环境变量列表的组织结构\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228151330-2022-02-28-15-13-30.png",alt:"20220228151330-2022-02-28-15-13-30"}})])]),s._v(" "),a("li",[a("p",[s._v("一个新程序开始时，用户栈的典型组织结构\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220228151825-2022-02-28-15-18-25.png",alt:"20220228151825-2022-02-28-15-18-25"}})])])])]),s._v(" "),a("h6",{staticClass:"anchor-user-defined",attrs:{id:"env"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[s._v("#")])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("操纵环境数组的函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdlib.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getenv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：若存在则为指向 name 的指针，若无匹配的，则为 NULL")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setenv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("newvalue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" overwrite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：若成功则为 0，若错误则为 -1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("unsetenv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：无")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])])]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("程序和进程的区别")]),s._v(" "),a("ul",[a("li",[s._v("程序是一堆代码和数据")]),s._v(" "),a("li",[s._v("程序可以作为目标文件存在于磁盘上，或者作为段存在于地址空间中")]),s._v(" "),a("li",[s._v("进程是执行中程序的一个具体的实例")]),s._v(" "),a("li",[s._v("程序总是运行在某个进程的上下文中")])])]),s._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("fork")]),s._v(" 函数与 "),a("code",[s._v("execve")]),s._v(" 函数的区别")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("fork")]),s._v(" 函数在新的子进程中运行相同的程序\n"),a("ul",[a("li",[s._v("新的子进程是父进程的一个复制品")])])]),s._v(" "),a("li",[a("code",[s._v("execve")]),s._v(" 函数在当前进程的上下文中加载并运行一个新的程序\n"),a("ul",[a("li",[s._v("它会覆盖当前进程的地址空间，但并没有创建一个新进程")]),s._v(" "),a("li",[s._v("新的程序仍然有相同的 PID")]),s._v(" "),a("li",[s._v("并且继承了调用 execve 函数时已打开的所有文件描述符")])])])])]),s._v(" "),a("h3",{attrs:{id:"846-利用-fork-和-execve-来运行程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#846-利用-fork-和-execve-来运行程序"}},[s._v("#")]),s._v(" 8.4.6 利用 "),a("code",[s._v("fork")]),s._v(" 和 "),a("code",[s._v("execve")]),s._v(" 来运行程序")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("实际应用")]),s._v(" "),a("ul",[a("li",[s._v("像 Unix shell 和 Web 服务器这样的程序大量使用了 "),a("code",[s._v("fork")]),s._v(" 和 "),a("code",[s._v("execve")]),s._v(" 函数")]),s._v(" "),a("li",[s._v("shell 是一个交互型的应用级程序，它代表用户运行其他程序\n"),a("ul",[a("li",[s._v("shell 执行一系列的读/求值（read/evaluate）步骤，然后终止\n"),a("ul",[a("li",[s._v("读步骤读取来自用户的一个命令行")]),s._v(" "),a("li",[s._v("求值步骤解析命令行，并代表用户运行程序")])])])])])])]),s._v(" "),a("h2",{attrs:{id:"85-信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#85-信号"}},[s._v("#")]),s._v(" 8.5 信号")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("Linux 信号是一种更高层的软件形式的异常，它允许进程和内核中断其他进程")]),s._v(" "),a("ul",[a("li",[s._v("内核通知用户进程发生异常的信号，比如\n"),a("ul",[a("li",[s._v("如果一个进程试图除以 0，那么内核就发送给它一个 "),a("code",[s._v("SIGFPE")]),s._v(" 信号（号码 8）\n"),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/pages/9ed0a9/#q7"}},[s._v("有时浮点数除 0，不会产生这个信号")])],1)])]),s._v(" "),a("li",[s._v("如果一个进程执行一条非法指令，那么内核就发送给它一个 "),a("code",[s._v("SIGILL")]),s._v(" 信号（号码 4）")]),s._v(" "),a("li",[s._v("如果进程进行非法内存引用，内核就发送给它一个 "),a("code",[s._v("SIGSEGV")]),s._v(" 信号（号码 11）")])])]),s._v(" "),a("li",[s._v("其他信号对应于内核或者其他用户进程中较高层的软件事件，比如\n"),a("ul",[a("li",[s._v("如果当进程在前台运行时，键入 "),a("code",[s._v("Ctrl+C")]),s._v("，那么内核就会发送一个 "),a("code",[s._v("SIGINT")]),s._v(" 信号（号码 2）给这个前台进程组中的每个进程")]),s._v(" "),a("li",[s._v("一个进程可以通过向另一个进程发送一个 "),a("code",[s._v("SIGKILL")]),s._v(" 信号（号码 9）强制终止它")]),s._v(" "),a("li",[s._v("当一个子进程终止或者停止时，内核会发送一个 "),a("code",[s._v("SIGCHLD")]),s._v(" 信号（号码 17）给父进程")])])])]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("Linux 中的信号")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220304111105-2022-03-04-11-11-06.png",alt:"20220304111105-2022-03-04-11-11-06"}})])])]),s._v(" "),a("h3",{attrs:{id:"851-信号术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#851-信号术语"}},[s._v("#")]),s._v(" 8.5.1 信号术语")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("信号处理程序 (signal handler)")]),s._v(" "),a("ul",[a("li",[s._v("收到信号会触发控制转移到信号处理程序")]),s._v(" "),a("li",[s._v("在信号处理程序完成处理之后，它将控制返回给被中断的程序\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220304112122-2022-03-04-11-21-22.png",alt:"20220304112122-2022-03-04-11-21-22"}})])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("待处理信号 (pending signal)")]),s._v(" "),a("ul",[a("li",[s._v("一个发出而没有被接收的信号叫做待处理信号（pending signal）\n"),a("ul",[a("li",[s._v("接收可以理解为被信号处理程序处理")])])]),s._v(" "),a("li",[s._v("在任何时刻，一种类型至多只会有一个待处理信号\n"),a("ul",[a("li",[s._v("如果一个进程有一个类型为 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" 的待处理信号\n"),a("ul",[a("li",[s._v("那么任何接下来发送到这个进程的类型为 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" 的信号都不会排队等待")],1),s._v(" "),a("li",[s._v("它们只是被简单地丢弃")]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("因此，不可以使用信号对其它进程中发生的事件进行计数")])])])])],1),s._v(" "),a("li",[s._v("内核为每个进程在 "),a("code",[s._v("pending")]),s._v(" 位向量中维护着待处理信号的集合\n"),a("ul",[a("li",[s._v("只要传送了一个类型为 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" 的信号，内核就会设置 "),a("code",[s._v("pending")]),s._v(" 中的第 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" 位")],1)])])])]),s._v(" "),a("li",[s._v("一个进程可以有选择性地阻塞接收某种信号\n"),a("ul",[a("li",[s._v("内核在 "),a("code",[s._v("blocked")]),s._v(" 位向量中维护着被阻塞的信号集合")]),s._v(" "),a("li",[s._v("当一种信号被阻塞时，它仍可以被发送\n"),a("ul",[a("li",[s._v("通过设置 "),a("code",[s._v("pending")]),s._v(" 位向量来实现")])])]),s._v(" "),a("li",[s._v("但是产生的待处理信号不会被接收，直到进程取消对这种信号的阻塞")])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("一个待处理信号最多只能被接收一次")]),s._v(" "),a("ul",[a("li",[s._v("只要接收了一个类型为 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" 的信号，内核就会清除 "),a("code",[s._v("pending")]),s._v(" 中的第 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" 位")],1)])])]),s._v(" "),a("h3",{attrs:{id:"852-发送信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#852-发送信号"}},[s._v("#")]),s._v(" 8.5.2 发送信号")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Unix 系统提供了大量向进程发送信号的机制。所有这些机制都是基于进程组（process group）这个概念的")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("每个进程都只属于一个进程组，进程组是由一个正整数进程组 ID 来标识的")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("getpgrp")]),s._v(" 函数返回当前进程的进程组 ID")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getpgrp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：调用进程的进程组 ID")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("默认地，"),a("strong",[s._v("一个子进程和它的父进程同属于一个进程组")])])]),s._v(" "),a("li",[a("p",[s._v("一个进程可以通过使用 "),a("code",[s._v("setpgid")]),s._v(" 函数来改变自己或者其他进程的进程组")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setpgid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" pgid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：若成功则为o，若错误则为 -1。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("如果 "),a("code",[s._v("pid")]),s._v(" 是 0，那么就使用当前进程的 PID")]),s._v(" "),a("li",[s._v("如果 "),a("code",[s._v("pgid")]),s._v(" 是 0，那么就用 "),a("code",[s._v("pid")]),s._v(" 指定的进程的 PID 作为进程组 ID")]),s._v(" "),a("li",[s._v("如果 "),a("code",[s._v("pid")]),s._v(" 和 "),a("code",[s._v("pgid")]),s._v(" 均为 0，则使用当前进程的 PID 作为进程组 ID")])])])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("使用 "),a("code",[s._v("/bin/kill")]),s._v(" 程序发送信号")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("linux"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /bin/kill -9 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15213")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送信号 9（SIGKILL）给进程 15213")]),s._v("\nlinux"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /bin/kill -9 -15213  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送一个 SIGKILL 信号给进程组 15213 中的每个进程")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("从键盘发送信号")]),s._v(" "),a("ul",[a("li",[s._v("Unix shell 使用"),a("strong",[s._v("作业")]),s._v("（job）这个抽象概念来表示为对一条命令行求值而创建的进程")]),s._v(" "),a("li",[s._v("在键盘上输入 Ctrl+C 会导致内核发送一个 "),a("code",[s._v("SIGINT")]),s._v(" 信号到前台进程组中的每个进程\n"),a("ul",[a("li",[s._v("默认情况下，结果是终止前台作业")])])]),s._v(" "),a("li",[s._v("输入 Ctrl+Z 会发送一个 "),a("code",[s._v("SIGTSTP")]),s._v(" 信号到前台进程组中的每个进程\n"),a("ul",[a("li",[s._v("默认情况下，结果是停止（挂起）前台作业")])])])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("用 "),a("code",[s._v("kill")]),s._v(" 函数发送信号")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("进程通过调用 "),a("code",[s._v("kill")]),s._v(" 函数发送信号给其他进程（包括它们自己）")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<signal.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：若成功则为 0，若错误则为 -1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("如果 "),a("code",[s._v("pid")]),s._v(" 大于零，那么 "),a("code",[s._v("kill")]),s._v(" 函数发送信号号码 "),a("code",[s._v("sig")]),s._v(" 给进程 "),a("code",[s._v("pid")])])]),s._v(" "),a("li",[a("p",[s._v("如果 "),a("code",[s._v("pid")]),s._v(" 等于零，那么 "),a("code",[s._v("kill")]),s._v(" 发送信号 "),a("code",[s._v("sig")]),s._v(" 给调用进程所在进程组中的每个进程")]),s._v(" "),a("ul",[a("li",[s._v("包括调用进程自己")])])]),s._v(" "),a("li",[a("p",[s._v("如果 "),a("code",[s._v("pid")]),s._v(" 小于零，"),a("code",[s._v("kill")]),s._v(" 发送信号 "),a("code",[s._v("sig")]),s._v(" 给进程组 "),a("code",[s._v("|pid|")]),s._v("（ "),a("code",[s._v("pid")]),s._v(" 的绝对值）中的每个进程")])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("用 "),a("code",[s._v("alarm")]),s._v(" 函数发送信号")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("进程可以通过调用 "),a("code",[s._v("alarm")]),s._v(" 函数向它自己发送 "),a("code",[s._v("SIGALRM")]),s._v(" 信号")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alarm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：前一次闹钟剩余的秒数，若以前没有设定闹钟，则为0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("alarm")]),s._v(" 函数安排内核在 "),a("code",[s._v("secs")]),s._v(" 秒后发送一个 "),a("code",[s._v("SIGALRM")]),s._v(" 信号给调用进程")])])])]),s._v(" "),a("h3",{attrs:{id:"853-接收信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#853-接收信号"}},[s._v("#")]),s._v(" 8.5.3 接收信号")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("接收信号的过程")]),s._v(" "),a("ul",[a("li",[s._v("当内核把进程 "),a("code",[s._v("p")]),s._v(" 从内核模式切换到用户模式时\n"),a("ul",[a("li",[s._v("例如，从系统调用返回或是完成了一次上下文切换")])])]),s._v(" "),a("li",[s._v("它会检查进程 "),a("code",[s._v("p")]),s._v(" 的未被阻塞的待处理信号的集合（pending &~blocked）\n"),a("ul",[a("li",[s._v("如果这个集合为空（通常情况下）\n"),a("ul",[a("li",[s._v("那么内核将控制传递到 "),a("code",[s._v("p")]),s._v(" 的逻辑控制流中的下一条指令")])])]),s._v(" "),a("li",[s._v("然而，如果集合是非空的\n"),a("ul",[a("li",[s._v("那么内核选择集合中的某个信号 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v(" （通常是最小的 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])]),s._v("），并且强制 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.439ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.138ex",height:"1.439ex",role:"img",focusable:"false",viewBox:"0 -442 503 636","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-59-TEX-I-1D45D",d:"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D45D","xlink:href":"#MJX-59-TEX-I-1D45D"}})])])])])]),s._v(" 接收信号 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.179ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 521 705","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-63-TEX-I-1D458",d:"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D458","xlink:href":"#MJX-63-TEX-I-1D458"}})])])])])])],1),s._v(" "),a("li",[s._v("收到这个信号会触发进程采取某种行为")]),s._v(" "),a("li",[s._v("一旦进程完成了这个行为，那么控制就传递回 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.439ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"1.138ex",height:"1.439ex",role:"img",focusable:"false",viewBox:"0 -442 503 636","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[a("defs",[a("path",{attrs:{id:"MJX-59-TEX-I-1D45D",d:"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"}})]),a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("use",{attrs:{"data-c":"1D45D","xlink:href":"#MJX-59-TEX-I-1D45D"}})])])])])]),s._v(" 的逻辑控制流中的下一条指令")],1)])])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("每个信号类型都有一个预定义的默认行为，是下面中的一种")]),s._v(" "),a("ul",[a("li",[s._v("进程终止")]),s._v(" "),a("li",[s._v("进程终止并转储内存")]),s._v(" "),a("li",[s._v("进程停止（挂起）直到被 "),a("code",[s._v("SIGCONT")]),s._v(" 信号重启")]),s._v(" "),a("li",[s._v("进程忽略该信号")])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("进程可以通过使用 "),a("code",[s._v("signal")]),s._v(" 函数修改和信号相关联的默认行为")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("SIGSTOP")]),s._v(" 和 "),a("code",[s._v("SIGKILL")]),s._v("，它们的默认行为是不能修改的")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<signal.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sighandler_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sighandler_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" signum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sighandler_t")]),s._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：若成功则为指向前次处理程序的指针，若出错则为 SIG_ERR（不设置 errno）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("signal")]),s._v(" 函数可以通过下列三种方法之一来改变和信号 "),a("code",[s._v("signum")]),s._v(" 相关联的行为\n"),a("ul",[a("li",[s._v("如果 "),a("code",[s._v("handler")]),s._v(" 是 "),a("code",[s._v("SIG_IGN")]),s._v("，那么忽略类型为 "),a("code",[s._v("signum")]),s._v(" 的信号")]),s._v(" "),a("li",[s._v("如果 "),a("code",[s._v("handler")]),s._v(" 是 "),a("code",[s._v("SIG_DFL")]),s._v("，那么类型为 "),a("code",[s._v("signum")]),s._v(" 的信号行为恢复为默认行为")]),s._v(" "),a("li",[s._v("否则，"),a("code",[s._v("handler")]),s._v(" 就是用户定义的函数的地址，这个函数被称为"),a("strong",[s._v("信号处理程序")]),s._v(" "),a("ul",[a("li",[s._v("只要进程接收到一个类型为 "),a("code",[s._v("signum")]),s._v(" 的信号，就会调用这个程序")]),s._v(" "),a("li",[s._v("通过把处理程序的地址传递到 "),a("code",[s._v("signal")]),s._v(" 函数从而改变默认行为，这叫做设置信号处理程序（installing the handler）")]),s._v(" "),a("li",[s._v("调用信号处理程序被称为捕获信号\n"),a("ul",[a("li",[s._v("即是接收信号")])])]),s._v(" "),a("li",[s._v("执行信号处理程序被称为处理信号")])])])])]),s._v(" "),a("li",[s._v("信息处理程序可以被其他信号处理程序中断\n"),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220304124612-2022-03-04-12-46-12.png",alt:"20220304124612-2022-03-04-12-46-12"}})])])])])]),s._v(" "),a("h3",{attrs:{id:"854-阻塞和解除阻塞信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#854-阻塞和解除阻塞信号"}},[s._v("#")]),s._v(" 8.5.4 阻塞和解除阻塞信号")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Linux 阻塞信号的隐式和显式的机制")]),s._v(" "),a("ul",[a("li",[s._v("隐式阻塞机制\n"),a("ul",[a("li",[s._v("内核默认阻塞任何当前处理程序正在处理信号类型的待处理的信号")])])]),s._v(" "),a("li",[s._v("显式阻塞机制\n"),a("ul",[a("li",[s._v("应用程序可以使用 "),a("code",[s._v("sigprocmask")]),s._v(" 函数和它的辅助函数，明确地阻塞和解除阻塞选定的信号")])])])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("sigprocmask")]),s._v(" 函数及其辅助函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<signal.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigprocmask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" how"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("oldset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigemptyset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigfillset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigaddset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" signum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigdelset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" signum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回；如果成功则为 0，若出错则为 -1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigismember")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" signum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：若 signum 是 set 的成员则为 1，如果不是则为 0，若出错则为 -1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("sigprocmask")]),s._v(" 函数改变当前阻塞的信号集合（"),a("a",{attrs:{href:"#851-%E4%BF%A1%E5%8F%B7%E6%9C%AF%E8%AF%AD"}},[s._v("8.5.1 节中描述的 blocked 位向量")]),s._v("）\n"),a("ul",[a("li",[s._v("具体的行为依赖于 "),a("code",[s._v("how")]),s._v(" 的值\n"),a("ul",[a("li",[a("code",[s._v("SIG_BLOCK")]),s._v("：把 set 中的信号添加到 blocked 中（blocked=blocked | set）。")]),s._v(" "),a("li",[a("code",[s._v("SIG_UNBLOCK")]),s._v("：从 blocked 中删除 set 中的信号（blocked=blocked &~set）。")]),s._v(" "),a("li",[a("code",[s._v("SIG_SETMASK")]),s._v("：block=set")])])]),s._v(" "),a("li",[s._v("如果 "),a("code",[s._v("oldset")]),s._v(" 不为 "),a("code",[s._v("NULL")]),s._v("，那么 blocked 位向量之前的值保存在 "),a("code",[s._v("oldset")]),s._v(" 中")])])]),s._v(" "),a("li",[a("code",[s._v("sigemptyset")]),s._v(" 初始化 set 为空集合")]),s._v(" "),a("li",[a("code",[s._v("sigfillset")]),s._v(" 函数把每个信号都添加到 set 中")]),s._v(" "),a("li",[a("code",[s._v("sigaddset")]),s._v(" 函数把 "),a("code",[s._v("signum")]),s._v(" 添加到 set")]),s._v(" "),a("li",[a("code",[s._v("sigdelset")]),s._v(" 从 set 中删除 "),a("code",[s._v("signum")])]),s._v(" "),a("li",[s._v("如果 "),a("code",[s._v("signum")]),s._v(" 是 "),a("code",[s._v("set")]),s._v(" 的成员，那么 "),a("code",[s._v("sigismember")]),s._v(" 返回 "),a("code",[s._v("1")]),s._v("，否则返回 "),a("code",[s._v("0")])])])]),s._v(" "),a("h3",{attrs:{id:"855-编写信号处理程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#855-编写信号处理程序"}},[s._v("#")]),s._v(" 8.5.5 编写信号处理程序")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("处理程序有几个属性使得它们很难推理分析")]),s._v(" "),a("ul",[a("li",[s._v("处理程序与主程序并发运行，共享同样的全局变量，因此可能与主程序和其他处理程序互相干扰")]),s._v(" "),a("li",[s._v("如何以及何时接收信号的规则常常有违人的直觉")]),s._v(" "),a("li",[s._v("不同的系统有不同的信号处理语义")])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("编写安全、正确和可移植的信号处理程序的一些基本规则")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("G0. 处理程序要尽可能简单")])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("G1. 在处理程序中只调用异步信号安全的函数")]),s._v(" "),a("ul",[a("li",[s._v("所谓异步信号安全的函数（或简称安全的函数）能够被信号处理程序安全地调用，原因有二\n"),a("ul",[a("li",[s._v("要么它是可重入的（例如只访问局部变量，见 12.7.2 节）")]),s._v(" "),a("li",[s._v("要么它不能被信号处理程序中断")])])]),s._v(" "),a("li",[s._v("许多常见的函数（例如 "),a("code",[s._v("printf")]),s._v("、"),a("code",[s._v("sprintf")]),s._v("、"),a("code",[s._v("malloc")]),s._v(" 和 "),a("code",[s._v("exit")]),s._v("）都不在此列")]),s._v(" "),a("li",[a("details",{staticClass:"custom-block details"},[a("summary",[s._v("异步信号安全的函数")]),s._v(" "),a("ul",[a("li",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/sbwcwso/PicBed@master/20220304133210-2022-03-04-13-32-11.png",alt:"20220304133210-2022-03-04-13-32-11"}})])])])])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("G2. 保存和恢复 "),a("code",[s._v("errno")])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("G3. 对共享的全局数据结构进行访问时，阻塞所有的信号")])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("G4. 用  "),a("code",[s._v("volatile")]),s._v(" 声明全局变量")]),s._v(" "),a("ul",[a("li",[s._v("用 "),a("code",[s._v("volatile")]),s._v(" 类型限定符来定义一个变量，告诉编译器不要缓存这个变量\n"),a("ul",[a("li",[s._v("强迫编译器每次在代码中引用变量时，都要从内存中读取变量的值")])])])])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("G5. 用 "),a("code",[s._v("sig_atomic_t")]),s._v(" 声明标志")]),s._v(" "),a("ul",[a("li",[s._v("在常见的处理程序设计中，处理程序会写全局标志来记录收到了信号\n"),a("ul",[a("li",[s._v("主程序周期性地读这个标志，响应信号，再清除该标志")])])]),s._v(" "),a("li",[s._v("C 提供一种整型数据类型 "),a("code",[s._v("sig_atomic_t")]),s._v("，对它的"),a("strong",[s._v("单个的")]),s._v("读和写保证会是原子的（不可中断的）\n"),a("ul",[a("li",[s._v("因为可以用一条指令来实现它们")]),s._v(" "),a("li",[s._v("不适用于像 "),a("code",[s._v("flag++")]),s._v(" 或 "),a("code",[s._v("flag=flag+10")]),s._v(" 这样的更新")])])])])])])])]),s._v(" "),a("div",{staticClass:"custom-block todo_list"},[a("p",{staticClass:"custom-block-title"},[s._v("🔲 待做事项")]),s._v(" "),a("ul",[a("li",[s._v("补全 12.7.2 节的链接")]),s._v(" "),a("li",[s._v("Shell lab\n"),a("ul",[a("li",[s._v("后台子程序回收时，使用了 "),a("code",[s._v("sprintf")]),s._v(" 函数，这个需要尽量避免\n"),a("ul",[a("li",[s._v("可以考虑换用 "),a("code",[s._v("csapp.c")]),s._v(" 中的函数")])])])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("可称植的信号处理")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Posix 标准定义了 "),a("code",[s._v("sigaction")]),s._v(" 函数，它允许用户在设置信号处理时，明确指定他们想要的信号处理语义")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<signal.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" signum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigaction")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("act"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigaction")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("oldact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：若成功则为 0，若出错则为 -1。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("借助 "),a("code",[s._v("sigaction")]),s._v(" 实现的 "),a("code",[s._v("Signal")]),s._v(" 包装函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("handler_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" signum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("handler_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigaction")]),s._v(" action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" old_action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sa_handler "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigemptyset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sa_mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Block sigs of type being handled */")]),s._v("\n  action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sa_flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" SA_RESTART"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Restart syscalls if possible */")]),s._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigaction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("signum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("old_action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("unix_error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Signal error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("old_action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sa_handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ul",[a("li",[s._v("其信号处理语义如下\n"),a("ul",[a("li",[s._v("只有这个处理程序当前正在处理的那种类型的信号被阻塞")]),s._v(" "),a("li",[s._v("和所有信号实现一样，信号不会排队等待")]),s._v(" "),a("li",[s._v("只要可能，被中断的系统调用会自动重启")]),s._v(" "),a("li",[s._v("一旦设置了信号处理程序，它就会一直保持\n"),a("ul",[a("li",[s._v("直到 "),a("code",[s._v("Signal")]),s._v(" 带着 "),a("code",[s._v("handler")]),s._v(" 参数为 "),a("code",[s._v("SIG_IGN")]),s._v(" 或者 "),a("code",[s._v("SIG_DFL")]),s._v(" 被调用")])])])])])])])])]),s._v(" "),a("h3",{attrs:{id:"856-同步流以避免讨厌的并发错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#856-同步流以避免讨厌的并发错误"}},[s._v("#")]),s._v(" 8.5.6 同步流以避免讨厌的并发错误")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意子进程继承了它们父进程的被阻塞集合")]),s._v(" "),a("ul",[a("li",[s._v("所以在调用 "),a("code",[s._v("execve")]),s._v(" 之前，或者调用 "),a("code",[s._v("fork")]),s._v(" 之后\n"),a("ul",[a("li",[s._v("需要根据实际情况小心地解除原主进程中被阻塞的相关信号")])])])])]),s._v(" "),a("h3",{attrs:{id:"857-显式地等待信号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#857-显式地等待信号"}},[s._v("#")]),s._v(" 8.5.7 显式地等待信号")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("sigsuspend")]),s._v(" 函数")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("函数原型")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<signal.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigsuspend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回：-1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("其相当于下到语句")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigprocmask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SIG_BLOCK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pause")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigprocmask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SIG_SETMASK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("其中，原子属性保证对 "),a("code",[s._v("sigprocmask")]),s._v("（第 1 行）和 "),a("code",[s._v("pause")]),s._v("（第 2 行）的调用总是一起发生的，不会被中断\n"),a("ul",[a("li",[s._v("这样就消除了潜在的竞争，即在调用 "),a("code",[s._v("sigprocmask")]),s._v(" 之后但在调用 "),a("code",[s._v("pause")]),s._v(" 之前收到了一个信号")])])])])]),s._v(" "),a("li",[a("details",{staticClass:"custom-block details"},[a("summary",[s._v("使用示例")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* $begin sigsuspend */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"csapp.h"')])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sig_atomic_t")]),s._v(" pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigchld_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" olderrno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" errno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Waitpid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    errno "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" olderrno"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigint_handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sigset_t")]),s._v(" mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SIGCHLD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sigchld_handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SIGINT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sigint_handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sigemptyset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sigaddset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SIGCHLD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sigprocmask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SIG_BLOCK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("mask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Block SIGCHLD */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Fork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Child */")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Wait for SIGCHLD to be received */")]),s._v("\n        pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sigsuspend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Optionally unblock SIGCHLD */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sigprocmask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SIG_SETMASK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Do some work after receiving SIGCHLD */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* $end sigsuspend */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br")])])])])])]),s._v(" "),a("h2",{attrs:{id:"86-非本地跳转"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#86-非本地跳转"}},[s._v("#")]),s._v(" 8.6 非本地跳转")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("非本地跳转（non local jump）是一种用户级异常控制流形式")]),s._v(" "),a("ul",[a("li",[s._v("将控制直接从一个函数转移到另一个当前正在执行的函数，而不需要经过正常的调用—返回序列")]),s._v(" "),a("li",[s._v("非本地跳转是通过 "),a("code",[s._v("setjmp")]),s._v(" 和 "),a("code",[s._v("longjmp")]),s._v(" 函数来提供的")])])]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("setjmp")]),s._v(" 和 "),a("code",[s._v("longjmp")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("函数原型")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<setjmp.h>")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jmp_buf env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigsetjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sigjmp_buf env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" savesigs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("longjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jmp_buf env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" retval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("siglongjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sigjmp_buf env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" retval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("setjmp")]),s._v(" 函数在 "),a("code",[s._v("env")]),s._v(" 缓冲区中保存当前调用环境，以供后面的 "),a("code",[s._v("longjmp")]),s._v(" 使用，并返回 0")]),s._v(" "),a("ul",[a("li",[s._v("调用环境包括程序计数器、栈指针和通用目的寄存器")])])]),s._v(" "),a("li",[a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[a("code",[s._v("setjmp")]),s._v(" 的返回的值不能被赋值给变量")]),s._v(" "),a("ul",[a("li",[s._v("不过它可以安全地用在 "),a("code",[s._v("switch")]),s._v(" 或条件语句的测试中")])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("longjmp")]),s._v(" 函数从 "),a("code",[s._v("env")]),s._v(" 缓冲区中恢复调用环境，然后触发一个从最近一次初始化 "),a("code",[s._v("env")]),s._v(" 的 "),a("code",[s._v("setjmp")]),s._v(" 调用的返回")]),s._v(" "),a("ul",[a("li",[s._v("然后 "),a("code",[s._v("setjmp")]),s._v(" 返回，其返回值为 "),a("code",[s._v("retval")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("retval")]),s._v(" 一般设置为非 0")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("sigsetjmp")]),s._v(" 和 "),a("code",[s._v("siglongjmp")]),s._v(" 函数是 setjmp 和 longjmp 的可以被信号处理程序使用的版本")]),s._v(" "),a("ul",[a("li",[s._v("在 "),a("code",[s._v("siglongjmp")]),s._v(" 可达的代码中，应该只调用安全的函数")])])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("用法示例")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("用于错误处理")]),s._v(" "),a("ul",[a("li",[s._v("如果在一个深层嵌套的函数调用中发现了一个错误情况\n"),a("ul",[a("li",[s._v("可以使用非本地跳转直接返回到一个普通的本地化的错误处理程序")]),s._v(" "),a("li",[s._v("而不是费力地解开调用栈")])])]),s._v(" "),a("li",[a("details",{staticClass:"custom-block details"},[a("summary",[s._v("示例")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* $begin setjmp */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"csapp.h"')])]),s._v("\n\njmp_buf buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" error1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" error2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Detected an error1 condition in foo\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Detected an error2 condition in foo\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Unknown error condition in foo\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Deeply nested function foo */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("longjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("longjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* $end setjmp */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])])])])])]),s._v(" "),a("li",[a("p",[s._v("在信号处理中用于软重启")]),s._v(" "),a("ul",[a("li",[a("details",{staticClass:"custom-block details"},[a("summary",[s._v("示例")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* $begin restart */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"csapp.h"')])]),s._v("\n\nsigjmp_buf buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("siglongjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sigsetjmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SIGINT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sio_puts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"starting\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sio_puts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"restarting\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sleep")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sio_puts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"processing...\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Control never reaches here */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* $end restart */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])])])])])])])]),s._v(" "),a("h2",{attrs:{id:"87-操作进程的工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#87-操作进程的工具"}},[s._v("#")]),s._v(" 8.7 操作进程的工具")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("Linux 系统提供了大量的监控和操作进程的有用工具")]),s._v(" "),a("ul",[a("li",[s._v("STRACE\n"),a("ul",[a("li",[s._v("打印一个正在运行的程序和它的子进程调用的每个系统调用的轨迹")]),s._v(" "),a("li",[s._v("用 "),a("code",[s._v("-static")]),s._v(" 编译的程序，可以得到一个更干净的、不带有大量与共享库相关的输出的轨迹")])])]),s._v(" "),a("li",[s._v("PS\n"),a("ul",[a("li",[s._v("列出当前系统中的进程（包括僵死进程）")])])]),s._v(" "),a("li",[s._v("TOP\n"),a("ul",[a("li",[s._v("打印出关于当前进程资源使用的信息")])])]),s._v(" "),a("li",[s._v("PMAP\n"),a("ul",[a("li",[s._v("显示进程的内存映射")])])]),s._v(" "),a("li",[s._v("/proc\n"),a("ul",[a("li",[s._v("一个虚拟文件系统，以 ASCII 文本格式输出大量内核数据结构的内容，用户程序可以读取这些内容")]),s._v(" "),a("li",[s._v("比如，输入 "),a("code",[s._v("cat /proc/loadavg")]),s._v("，可以看到 Linux 系统上当前的平均负载")])])])])])],1)}),[],!1,null,null,null);"function"==typeof e&&e(r);t.default=r.exports}}]);