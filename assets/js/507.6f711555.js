(window.webpackJsonp=window.webpackJsonp||[]).push([[507],{836:function(a,t,r){"use strict";r.r(t);var _=r(12),s=function(a){a.options.__data__block__={markmap_1a96284d:"- [单元测试概述](#单元测试概述)\n  - [现实的开发问题](#现实的开发问题)\n  - [单元测试](#单元测试)\n  - [单元测试内容](#单元测试内容)\n  - [单元测试原则](#单元测试原则)\n  - [单元测试过程](#单元测试过程)\n  - [单元测试质量](#单元测试质量)\n  - [单元测试方法](#单元测试方法)\n    - [黑盒测试](#黑盒测试)\n    - [白盒测试](#白盒测试)\n  - [单元测试之 `xUnit`](#单元测试之-xunit)\n  - [单元测试之 `Mock`](#单元测试之-mock)"}},v=Object(_.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"单元测试概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试概述"}},[a._v("#")]),a._v(" 单元测试概述")]),a._v(" "),r("Markmap",{attrs:{id:"markmap_1a96284d",code:a.$dataBlock.markmap_1a96284d}}),r("h2",{attrs:{id:"现实的开发问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#现实的开发问题"}},[a._v("#")]),a._v(" 现实的开发问题")]),a._v(" "),r("ul",[r("li",[a._v("没有进行单元测试，直接进行集成的后果\n"),r("ul",[r("li",[a._v("大量故障堆积在项目中后期，项目后10%的工作占用了项目90%的时间")]),a._v(" "),r("li",[a._v("故障难以定位，而且飘忽不定，开发和测试人员疲于奔命")])])])]),a._v(" "),r("h2",{attrs:{id:"单元测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[a._v("#")]),a._v(" 单元测试")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("单元是构造软件系统的基础，只有使每个单元得到足够的测试，系统的质量才能有可靠的保证，即单元测试是构筑产品质量的基石")])]),a._v(" "),r("li",[r("p",[a._v("单元测试（Unit Testing）是对软件中的最小可测试单元进行检查和验证")])]),a._v(" "),r("li",[r("p",[a._v("程序员必须对自己的代码质量负责，单元测试是对自己代码质量的基本承诺")])])]),a._v(" "),r("h2",{attrs:{id:"单元测试内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试内容"}},[a._v("#")]),a._v(" 单元测试内容")]),a._v(" "),r("ul",[r("li",[a._v("时间测试")])]),a._v(" "),r("h2",{attrs:{id:"单元测试原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试原则"}},[a._v("#")]),a._v(" 单元测试原则")]),a._v(" "),r("ul",[r("li",[a._v("快速的")]),a._v(" "),r("li",[a._v("独立的")]),a._v(" "),r("li",[a._v("可重复的")]),a._v(" "),r("li",[a._v("自我验证的")]),a._v(" "),r("li",[a._v("及时的")])]),a._v(" "),r("h2",{attrs:{id:"单元测试过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试过程"}},[a._v("#")]),a._v(" 单元测试过程")]),a._v(" "),r("h2",{attrs:{id:"单元测试质量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试质量"}},[a._v("#")]),a._v(" 单元测试质量")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("测试通过率")])]),a._v(" "),r("li",[r("p",[a._v("测试覆盖率")])]),a._v(" "),r("li",[r("p",[a._v("单元测试质量")])])]),a._v(" "),r("h2",{attrs:{id:"单元测试方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试方法"}},[a._v("#")]),a._v(" 单元测试方法")]),a._v(" "),r("h3",{attrs:{id:"黑盒测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#黑盒测试"}},[a._v("#")]),a._v(" 黑盒测试")]),a._v(" "),r("h3",{attrs:{id:"白盒测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#白盒测试"}},[a._v("#")]),a._v(" 白盒测试")]),a._v(" "),r("h2",{attrs:{id:"单元测试之-xunit"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试之-xunit"}},[a._v("#")]),a._v(" 单元测试之 "),r("code",[a._v("xUnit")])]),a._v(" "),r("h2",{attrs:{id:"单元测试之-mock"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单元测试之-mock"}},[a._v("#")]),a._v(" 单元测试之 "),r("code",[a._v("Mock")])])],1)}),[],!1,null,null,null);"function"==typeof s&&s(v);t.default=v.exports}}]);