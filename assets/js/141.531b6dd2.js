(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{725:function(a,t,r){"use strict";r.r(t);var s=r(12),e=function(a){a.options.__data__block__={markmap_1a96284d:"- [队列](#队列)\n  - [队列模型](#队列模型)\n    - [顺序储存实现](#顺序储存实现)\n  - [多项式的加法运算](#多项式的加法运算)"}},n=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[a._v("#")]),a._v(" 队列")]),a._v(" "),r("Markmap",{attrs:{id:"markmap_1a96284d",code:a.$dataBlock.markmap_1a96284d}}),r("h2",{attrs:{id:"队列模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#队列模型"}},[a._v("#")]),a._v(" 队列模型")]),a._v(" "),r("ul",[r("li",[a._v("FIFO")])]),a._v(" "),r("h3",{attrs:{id:"顺序储存实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#顺序储存实现"}},[a._v("#")]),a._v(" 顺序储存实现")]),a._v(" "),r("ul",[r("li",[a._v("顺环队列")])]),a._v(" "),r("h2",{attrs:{id:"多项式的加法运算"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多项式的加法运算"}},[a._v("#")]),a._v(" 多项式的加法运算")])],1)}),[],!1,null,null,null);"function"==typeof e&&e(n);t.default=n.exports}}]);