(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{722:function(a,t,r){"use strict";r.r(t);var s=r(12),_=function(a){a.options.__data__block__={markmap_1a96284d:"- [应用举例--最大子列和问题](#应用举例--最大子列和问题)\n  - [算法1 -- 暴力求解](#算法1----暴力求解)\n  - [算法2 -- 暴力求解优化](#算法2----暴力求解优化)\n  - [算法3 -- 分而治之](#算法3----分而治之)\n  - [算法4 -- 在线处理](#算法4----在线处理)"}},e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"应用举例--最大子列和问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用举例--最大子列和问题"}},[a._v("#")]),a._v(" 应用举例--最大子列和问题")]),a._v(" "),r("Markmap",{attrs:{id:"markmap_1a96284d",code:a.$dataBlock.markmap_1a96284d}}),r("h2",{attrs:{id:"算法1----暴力求解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法1----暴力求解"}},[a._v("#")]),a._v(" 算法1 -- 暴力求解")]),a._v(" "),r("h2",{attrs:{id:"算法2----暴力求解优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法2----暴力求解优化"}},[a._v("#")]),a._v(" 算法2 -- 暴力求解优化")]),a._v(" "),r("h2",{attrs:{id:"算法3----分而治之"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法3----分而治之"}},[a._v("#")]),a._v(" 算法3 -- 分而治之")]),a._v(" "),r("ul",[r("li",[a._v("左边的最大子列和")]),a._v(" "),r("li",[a._v("右边的最大子列和")]),a._v(" "),r("li",[a._v("跨越边界的最大子列和")])]),a._v(" "),r("h2",{attrs:{id:"算法4----在线处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法4----在线处理"}},[a._v("#")]),a._v(" 算法4 -- 在线处理")]),a._v(" "),r("ul",[r("li",[r("p",[r("strong",[a._v("在线")]),a._v("的意思是指每输入一个数据就进行即时处理，在任何一个地方中止输入，算法都能正确给出当前的解")])]),a._v(" "),r("li",[r("p",[a._v("副作用")]),a._v(" "),r("ul",[r("li",[a._v("可读性较差")])])])])],1)}),[],!1,null,null,null);"function"==typeof _&&_(e);t.default=e.exports}}]);