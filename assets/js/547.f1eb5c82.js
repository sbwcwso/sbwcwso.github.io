(window.webpackJsonp=window.webpackJsonp||[]).push([[547],{862:function(a,t,r){"use strict";r.r(t);var s=r(12),e=function(a){a.options.__data__block__={markmap_1a96284d:"- [基本数据类型](#基本数据类型)\n  - [数组](#数组)\n    - [数组的内存存储](#数组的内存存储)\n    - [数组访问](#数组访问)\n    - [嵌套数组及其访问](#嵌套数组及其访问)\n    - [指针数组(Multi-Level Array)](#指针数组multi-level-array)\n    - [N*N Matrix Code](#nn-matrix-code)\n    - [数组存取的优化](#数组存取的优化)\n  - [结构](#结构)\n    - [结构中元素的地址计算](#结构中元素的地址计算)\n    - [结构的存储对齐要求](#结构的存储对齐要求)\n    - [结构数组](#结构数组)\n  - [联合](#联合)"}},l=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"基本数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[a._v("#")]),a._v(" 基本数据类型")]),a._v(" "),r("Markmap",{attrs:{id:"markmap_1a96284d",code:a.$dataBlock.markmap_1a96284d}}),r("h2",{attrs:{id:"数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),r("h3",{attrs:{id:"数组的内存存储"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组的内存存储"}},[a._v("#")]),a._v(" 数组的内存存储")]),a._v(" "),r("ul",[r("li",[a._v("连续储存")])]),a._v(" "),r("h3",{attrs:{id:"数组访问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组访问"}},[a._v("#")]),a._v(" 数组访问")]),a._v(" "),r("h3",{attrs:{id:"嵌套数组及其访问"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#嵌套数组及其访问"}},[a._v("#")]),a._v(" 嵌套数组及其访问")]),a._v(" "),r("ul",[r("li",[a._v("多维数组")])]),a._v(" "),r("h3",{attrs:{id:"指针数组multi-level-array"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#指针数组multi-level-array"}},[a._v("#")]),a._v(" 指针数组(Multi-Level Array)")]),a._v(" "),r("ul",[r("li",[a._v("需要至少进行两次内存读取")]),a._v(" "),r("li",[a._v("与嵌套数组相比，在内存中的储存形态不同")])]),a._v(" "),r("h3",{attrs:{id:"nn-matrix-code"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nn-matrix-code"}},[a._v("#")]),a._v(" N*N Matrix Code")]),a._v(" "),r("ul",[r("li",[a._v("第 2 个已经过时")])]),a._v(" "),r("h3",{attrs:{id:"数组存取的优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组存取的优化"}},[a._v("#")]),a._v(" 数组存取的优化")]),a._v(" "),r("h2",{attrs:{id:"结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[a._v("#")]),a._v(" 结构")]),a._v(" "),r("h3",{attrs:{id:"结构中元素的地址计算"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结构中元素的地址计算"}},[a._v("#")]),a._v(" 结构中元素的地址计算")]),a._v(" "),r("h3",{attrs:{id:"结构的存储对齐要求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结构的存储对齐要求"}},[a._v("#")]),a._v(" 结构的存储对齐要求")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("编译器")]),a._v(" "),r("ul",[r("li",[a._v("在结构的各个元素间插入额外空间来满足不同元素的对齐要求")])])]),a._v(" "),r("li",[r("p",[a._v("必须满足结构中各个元素的对齐要求")])]),a._v(" "),r("li",[r("p",[a._v("结构的起始地址与结构长度必须是 "),r("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[r("svg",{staticStyle:{"vertical-align":"0"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"2.011ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 889 683","xmlns:xlink":"http://www.w3.org/1999/xlink"}},[r("defs",[r("path",{attrs:{id:"MJX-1192-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}})]),r("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[r("g",{attrs:{"data-mml-node":"math"}},[r("g",{attrs:{"data-mml-node":"mi"}},[r("use",{attrs:{"data-c":"1D43E","xlink:href":"#MJX-1192-TEX-I-1D43E"}})])])])])]),a._v(" 的整数倍")],1)]),a._v(" "),r("li",[r("p",[a._v("与具体的机器有关")])]),a._v(" "),r("li",[r("p",[a._v("结构内元素不同的先后顺序会影响总的字节占用数")])])]),a._v(" "),r("h3",{attrs:{id:"结构数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结构数组"}},[a._v("#")]),a._v(" 结构数组")]),a._v(" "),r("h2",{attrs:{id:"联合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#联合"}},[a._v("#")]),a._v(" 联合")])],1)}),[],!1,null,null,null);"function"==typeof e&&e(l);t.default=l.exports}}]);