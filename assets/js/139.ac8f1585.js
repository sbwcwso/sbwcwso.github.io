(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{723:function(t,a,s){"use strict";s.r(a);var _=s(12),i=function(t){t.options.__data__block__={markmap_1a96284d:"- [线性表及其实现](#线性表及其实现)\n  - [多项式的表示](#多项式的表示)\n    - [顺序存储结构直接表示](#顺序存储结构直接表示)\n    - [顺序存储结构表示非零项](#顺序存储结构表示非零项)\n    - [链表结构储存非零项](#链表结构储存非零项)\n  - [什么是线性表](#什么是线性表)\n  - [线性表的抽象数据类型描述](#线性表的抽象数据类型描述)\n  - [线性表的实现](#线性表的实现)\n    - [顺序储存实现](#顺序储存实现)\n    - [链式储存实现](#链式储存实现)\n  - [广义表](#广义表)\n    - [二元多项式](#二元多项式)\n  - [多重链表](#多重链表)"}},v=Object(_.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"线性表及其实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表及其实现"}},[t._v("#")]),t._v(" 线性表及其实现")]),t._v(" "),s("Markmap",{attrs:{id:"markmap_1a96284d",code:t.$dataBlock.markmap_1a96284d}}),s("h2",{attrs:{id:"多项式的表示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多项式的表示"}},[t._v("#")]),t._v(" 多项式的表示")]),t._v(" "),s("h3",{attrs:{id:"顺序存储结构直接表示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序存储结构直接表示"}},[t._v("#")]),t._v(" 顺序存储结构直接表示")]),t._v(" "),s("ul",[s("li",[t._v("系数较大时，难以表示")])]),t._v(" "),s("h3",{attrs:{id:"顺序存储结构表示非零项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序存储结构表示非零项"}},[t._v("#")]),t._v(" 顺序存储结构表示非零项")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("存储系数和指数")])]),t._v(" "),s("li",[s("p",[t._v("只用表示非零项")])]),t._v(" "),s("li",[s("p",[t._v("多项式相加")])])]),t._v(" "),s("h3",{attrs:{id:"链表结构储存非零项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表结构储存非零项"}},[t._v("#")]),t._v(" 链表结构储存非零项")]),t._v(" "),s("h2",{attrs:{id:"什么是线性表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是线性表"}},[t._v("#")]),t._v(" 什么是线性表")]),t._v(" "),s("div",{staticClass:"custom-block theorem"},[s("p",{staticClass:"title"},[t._v("线性表(Linear List)：由同类型数据元素构成有序序列的线性结构")]),s("ul",[s("li",[t._v("表中元素个数称为线性表的长度")]),t._v(" "),s("li",[t._v("线性表没有元素时，称为空表")]),t._v(" "),s("li",[t._v("表起始位置称表头，表结束位置称表尾")])])]),s("h2",{attrs:{id:"线性表的抽象数据类型描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表的抽象数据类型描述"}},[t._v("#")]),t._v(" 线性表的抽象数据类型描述")]),t._v(" "),s("ul",[s("li",[t._v("类型名称：线性表（List）")]),t._v(" "),s("li",[t._v("数据对象集：线性表是 n (≥0)个元素构成的有序序列( a 1 , a 2 , ,a n )")]),t._v(" "),s("li",[t._v("操作集：线性表L  List，整数i表示位置，元素X  ElementType，")])]),t._v(" "),s("div",{staticClass:"custom-block note"},[s("p",{staticClass:"custom-block-title"},[t._v("线性表基本操作主要有：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("List MakeEmpty()")]),t._v(" ：初始化一个空线性表 "),s("code",[t._v("L")]),t._v(" ；")]),t._v(" "),s("li",[t._v("ElementType FindKth( int K, List L )：根据位序K，返回相应元素 ；")]),t._v(" "),s("li",[t._v("int Find( ElementType X, List L )：在线性表L中查找X的第一次出现位置；")]),t._v(" "),s("li",[t._v("void Insert( ElementType X, int i, List L)：在位序i前插入一个新元素X；")]),t._v(" "),s("li",[t._v("void Delete( int i, List L )：删除指定位序i的元素；")]),t._v(" "),s("li",[t._v("int Length( List L )：返回线性表L的长度n。")])])]),t._v(" "),s("h2",{attrs:{id:"线性表的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表的实现"}},[t._v("#")]),t._v(" 线性表的实现")]),t._v(" "),s("h3",{attrs:{id:"顺序储存实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序储存实现"}},[t._v("#")]),t._v(" 顺序储存实现")]),t._v(" "),s("h3",{attrs:{id:"链式储存实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链式储存实现"}},[t._v("#")]),t._v(" 链式储存实现")]),t._v(" "),s("ul",[s("li",[t._v("插入，删除，先找到前一个结点")]),t._v(" "),s("li",[t._v("注意操作的节点是头结点的情况")])]),t._v(" "),s("h2",{attrs:{id:"广义表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#广义表"}},[t._v("#")]),t._v(" 广义表")]),t._v(" "),s("h3",{attrs:{id:"二元多项式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二元多项式"}},[t._v("#")]),t._v(" 二元多项式")]),t._v(" "),s("ul",[s("li",[t._v('"复杂" 链表')])]),t._v(" "),s("h2",{attrs:{id:"多重链表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多重链表"}},[t._v("#")]),t._v(" 多重链表")]),t._v(" "),s("ul",[s("li",[t._v("十字链表表示稀疏矩阵\n"),s("ul",[s("li",[t._v("行和列均是循环链表")]),t._v(" "),s("li",[t._v("起始的 Term 是入口节点\n"),s("ul",[s("li",[t._v("有矩阵的信息，多少行，多少列，多少个非零元素")])])])])])])],1)}),[],!1,null,null,null);"function"==typeof i&&i(v);a.default=v.exports}}]);